on:
  workflow_dispatch:

jobs:
  testJob:
    strategy:
      matrix:
        include:
          - python-version: '3.7'
            os: ubuntu-22.04
          - python-version: '3.8'
            os: ubuntu-latest
          - python-version: '3.9'
            os: ubuntu-latest
          - python-version: '3.10'
            os: ubuntu-latest
          - python-version: '3.11'
            os: ubuntu-latest
          - python-version: '3.12'
            os: ubuntu-latest
          - python-version: '3.13'
            os: ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        id: setup_python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
        continue-on-error: ${{ matrix.python-version == '3.13' }}

      - name: Inform if Python 3.13 is unavailable
        if: ${{ matrix.python-version == '3.13' && failure() }}
        run: |
          echo "Python 3.13 is not yet available in GitHub Actions."
          echo "Unit tests for versions 3.7 to 3.12 did pass successfully."
          echo "Publication will proceed."

      - name: Set RUNNING_TESTS environment variable
        run: echo "RUNNING_TESTS=1" >> $GITHUB_ENV

      - name: Install Dependencies
        if: ${{ success() || matrix.python-version != '3.13' }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Add project directory to PYTHONPATH
        if: ${{ success() || matrix.python-version != '3.13' }}
        run: echo "PYTHONPATH=${{ github.workspace }}/src" >> $GITHUB_ENV

      - name: Run Tests
        if: ${{ success() || matrix.python-version != '3.13' }}
        run: |
          python -m unittest discover -s tests

      - name: Run test coverage
        if: ${{ matrix.python-version == '3.13'}}
        run: pytest --cov --cov-branch --cov-report=xml

      - name: Upload results to Codecov
        if: ${{ matrix.python-version == '3.13'}}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  

  continue:
    runs-on: ubuntu-latest
    needs: testJob

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Add project directory to PYTHONPATH
        run: echo "PYTHONPATH=${{ github.workspace }}/src" >> $GITHUB_ENV

      - name: Update Version
        run: |
          python roll_version.py patch

      - name: Read Version Tag
        id: read_tag
        run: |
          echo "TAG_NAME=$(<worktoy-tag.txt)" >> $GITHUB_ENV

      - name: Configure Git User Info
        run: |
          git config --local user.name "Asger Jon Vistisen"
          git config --local user.email "asgerjon2@gmail.com"

      - name: Get the commit message
        id: get_commit_message
        run: |
          commit_message=$(git log -1 --pretty=%B)
          echo "commit_message=$commit_message" >> $GITHUB_ENV

      - name: Commit changes
        run: |
          git add pyproject.toml
          git add worktoy_version.json
          git add worktoy-tag.txt
          git commit -m "${{ env.commit_message }}"

      - name: Push changes
        run: git push origin HEAD:${{ github.ref }}

      - name: Build Package
        run: python -m build

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.GITHUB2024 }}
          skip-existing: true

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1.14.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ env.TAG_NAME }}
          name: RC ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          generateReleaseNotes: true
